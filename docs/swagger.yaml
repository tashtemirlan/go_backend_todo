basePath: /api
definitions:
  models.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      image:
        type: string
      password:
        type: string
    type: object
host: localhost:2525
info:
  contact: {}
  description: Backend API for Material To-Do App
  title: Material To-Do API
  version: "1.0"
paths:
  /forgetpassword/resetPassword:
    post:
      consumes:
      - multipart/form-data
      description: Resets the user's password using only email and new password (no
        code required).
      parameters:
      - description: User's email
        in: formData
        name: email
        required: true
        type: string
      - description: New password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Reset user password
      tags:
      - Auth
  /forgetpassword/sendCode:
    post:
      consumes:
      - multipart/form-data
      description: Sends a 6-digit reset code to the user's email.
      parameters:
      - description: User's email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Send password reset code
      tags:
      - Auth
  /login:
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: Logs in a user and returns JWT
      parameters:
      - description: Email
        in: formData
        name: email
        type: string
      - description: Password
        in: formData
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - Auth
  /me:
    get:
      consumes:
      - application/json
      description: Returns the authenticated user's data
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - User
  /signup:
    post:
      consumes:
      - multipart/form-data
      description: Registers a new user
      parameters:
      - description: Full Name
        in: formData
        name: full_name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Profile Image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - Auth
  /user/update:
    put:
      consumes:
      - multipart/form-data
      description: Allows an authenticated user to update their full name and/or profile
        image
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: New Full Name
        in: formData
        name: full_name
        type: string
      - description: New Profile Image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses: {}
      summary: Update user profile
      tags:
      - User
swagger: "2.0"
